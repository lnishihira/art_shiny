install('rmarkdown')
install.packages('rmarkdown')
install.packages('knitr)
install.packages('knitr')
install.packages('knitr')
install.packages('data.table')
install.packages('dplyr')
install.packages('ggplot2')
library(plyr)
library(dplyr)
v = 10:15
v
v[2:4]
temp[ temp > min(temp) & temp < max(temp)]
temp = c(27, 29, 23, 14)
temp[ temp > min(temp) & temp < max(temp)]
?lm
ls()
?str()
str(mtcars)
summary(mtcars)
order(mtcars)
order(mtcars$mpg)
student = list(Name = "Peter", Classes = c("Bio101", "Psgych200"))
student
student[1]
student[[2]]
student[[2]][1]
head(iris)
v = 1:4
sapply(v, sqrt)
sqrt(v)
sapply(iris[, 1:4], mean)
install.packages("VIM")
install.packages("lmtest")
library(dplyr)
library(data.table)
library(stringr)
# Pull in data
artists_0 = read.csv('~/Documents/NYCDSA/R/Shiny_project/museum-collection/artists.csv')
artworks_0 = read.csv('~/Documents/NYCDSA/R/Shiny_project/museum-collection/artworks.csv')
# start over by running this copy
artists = copy(artists_0)
artworks = copy(artworks_0)
artworks = artworks %>%
select(., -Duration..s., -Weight..kg., -Depth..cm.,
-Length..cm., -Width..cm., -Height..cm., -Circumference..cm.,
-Diameter..cm., -Catalogue, -Dimensions, -Object.Number,
-Credit, -Artwork.ID, -Title, -Medium, -Department)  %>%
mutate(Artist.ID = as.numeric(Artist.ID),
Acquisition.Date = as.Date(artworks$Acquisition.Date))
artists =  artists %>%
mutate(Artist.ID = as.numeric(Artist.ID), Gender = str_to_lower(Gender))
colnames(artworks)
colnames(artists)
artists =  artists %>%
mutate(Artist.ID = as.numeric(Artist.ID), Gender = str_to_lower(Gender)) %>%
rename(., artist_id = "Artist.ID", name = "Name", birth_year = "Birth.Year",
death_year = "Death.year", nationality = "Nationality")
artworks = artworks %>%
select(., -Duration..s., -Weight..kg., -Depth..cm.,
-Length..cm., -Width..cm., -Height..cm., -Circumference..cm.,
-Diameter..cm., -Catalogue, -Dimensions, -Object.Number,
-Credit, -Artwork.ID, -Title, -Medium, -Department)  %>%
mutate(Artist.ID = as.numeric(Artist.ID),
Acquisition.Date = as.Date(artworks$Acquisition.Date)) %>%
rename(., artist_id = "Artist.ID", aqui_date = "Acquisition.Date",
classification = "Classification", date = "Date", name = "Name")
# start over by running this copy
artists = copy(artists_0)
artworks = copy(artworks_0)
artworks = artworks %>%
select(., -Duration..s., -Weight..kg., -Depth..cm.,
-Length..cm., -Width..cm., -Height..cm., -Circumference..cm.,
-Diameter..cm., -Catalogue, -Dimensions, -Object.Number,
-Credit, -Artwork.ID, -Title, -Medium, -Department)  %>%
mutate(Artist.ID = as.numeric(Artist.ID),
Acquisition.Date = as.Date(artworks$Acquisition.Date)) %>%
rename(., artist_id = "Artist.ID", aqui_date = "Acquisition.Date",
classification = "Classification", date = "Date", name = "Name")
artists =  artists %>%
mutate(Artist.ID = as.numeric(Artist.ID), Gender = str_to_lower(Gender)) %>%
rename(., artist_id = "Artist.ID", name = "Name", birth_year = "Birth.Year",
death_year = "Death.Year", nationality = "Nationality")
artworks = artworks %>% add_count(classification, name = "class_count")
artworks = artworks %>% add_count(aqui_date, name = "acquired_date")
artworks$class_ = ifelse(artworks$class_count<1000, "Other", as.character(artworks$Classification))
artworks$class_ = ifelse(artworks$class_count<1000, "Other", as.character(artworks$classification))
artworks = data.frame(artworks)
ggplot(inner_join(artworks, artists, by="artist_id"), aes(x=class_)) + geom_bar(aes(fill=Gender)) +
theme(axis.text.x = element_text(angle = 90))
library(ggplot)
library(ggplot2)
ggplot(inner_join(artworks, artists, by="artist_id"), aes(x=class_)) + geom_bar(aes(fill=Gender)) +
theme(axis.text.x = element_text(angle = 90))
all_art = inner_join(artworks, artists, by="artist_id")
ggplot(all_art, aes(x=class_)) + geom_bar(aes(fill=Gender)) +
theme(axis.text.x = element_text(angle = 90))
female_ = all_art[all_art$gender == "female",]
ggplot(female_, aes(x=class_)) + geom_bar() +
theme(axis.text.x = element_text(angle = 90))
female_$class_
female_
# start over by running this copy
artists = copy(artists_0)
artists =  artists %>%
mutate(Artist.ID = as.numeric(Artist.ID), Gender = str_to_lower(Gender)) %>%
rename(., artist_id = "Artist.ID", name = "Name", birth_year = "Birth.Year",
death_year = "Death.Year", nationality = "Nationality",
gender = "Gender")
# subset dataframes
all_art = inner_join(artworks, artists, by="artist_id")
female_ = all_art[all_art$gender == "female",]
ggplot(female_, aes(x=class_)) + geom_bar() +
theme(axis.text.x = element_text(angle = 90))
head(female_)
# subset dataframes
all_art = inner_join(artworks, artists, by="name")
ggplot(all_art, aes(x=class_)) + geom_bar(aes(fill=Gender)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(all_art, aes(x=class_)) + geom_bar(aes(fill=gender)) +
theme(axis.text.x = element_text(angle = 90))
ggplot(female_, aes(x=class_)) + geom_bar() +
theme(axis.text.x = element_text(angle = 90))
head(female_)
female_ = all_art[all_art$gender == "female",]
head(female_)
dim(female_)
summary(female_)
f_american = female_ %>% filter(., nationality == "American")
f_international = female_ %>% filter(., nationality != "American")
female_$is_american = ifelse(female_$nationality == "American", 1, 0)
ggplot(female_, aes(x=class_)) + geom_bar(aes(fill = is_american)) +
theme(axis.text.x = element_text(angle = 90))
unique(female_$classification)
ggplot(female_, aes(x=class_)) + geom_bar(aes(fill = is_american)) +
theme(axis.text.x = element_text(angle = 90)) +
+ scale_x_discrete(labels=c("Mies van der Rohe Archive" = 'Rohe Archive'))
ggplot(female_, aes(x=class_)) + geom_bar(aes(fill = is_american)) +
theme(axis.text.x = element_text(angle = 90))
+ scale_x_discrete(labels=c("Mies van der Rohe Archive" = 'Rohe Archive'))
ggplot(female_, aes(x=class_)) + geom_bar(aes(fill = is_american)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_discrete(labels=c("Mies van der Rohe Archive" = 'Rohe Archive'))
rohe_archive = female_ %>% filter(classification=="Mies van der Rohe Archive")
rohe_archive
f_international = female_ %>% filter(., nationality != "American")
dim(f_international)
female_ %>% filter(., is_american == 0)
dim(female_ %>% filter(., is_american == 0))
dim(f_international)
ggplot(f_international, aes(x=class_)) + geom_bar() +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_discrete(labels=c("Mies van der Rohe Archive" = 'Rohe Archive'))
summary(female_)
ggplt(f_international, aes(x = aqui_date)) + geom_bar()
ggplot(f_international, aes(x = aqui_date)) + geom_bar()
ggplot(f_international, aes(x = aqui_date)) + geom_line()
ggplot(group_by(f_international, aqui_date), aes(x = aqui_date)) + geom_line()
ggplot(f_international, aes(x = aqui_date, y=acquired_date)) + geom_line()
ggplot(f_international, aes(x = aqui_date, y=acquired_date)) + geom_line(color=nationality)
ggplot(f_international, aes(x = aqui_date, y=acquired_date)) + geom_line(color=nationality)
ggplot(f_international, aes(x = aqui_date, y=acquired_date)) + geom_line(aes(color=nationality))
all_art = all_art %>% add_count(nationality, name = "nationality_count")
all_art %>% arrange(., desc(nationality_count))
all_art %>% select(nationality, nationality_count) %>% arrange(., desc(nationality_count))
group_by(all_art, nationality) %>% select(nationality, nationality_count) %>% arrange(., desc(nationality_count))
group_by(all_art, nationality) %>% select(nationality, nationality_count) %>% arrange(., desc(nationality_count))
group_by(all_art, nationality) %>%
summarise(n())
group_by(all_art, nationality) %>%
arrange(summarise(n()))
group_by(all_art, nationality) %>%
summarise(total = n()) %>% arrange(., desc(total))
?top_n
group_by(all_art, nationality) %>%
summarise(total = n()) %>%
arrange(., desc(total)) %>%
top_n(n()*.2)
head(all_art)
colnames(all_art)
all_art = all_art %>% select(., -artist_id.x, -artist_id.y)
source('~/Documents/NYCDSA/R/Shiny_project/helper_moma.R', echo=TRUE)
shiny::runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
runApp('Documents/NYCDSA/R/SHINY/shiny_practice')
female_ = all_art[all_art$gender == "female",]
ggplot(f_international, aes(x = aqui_date, y=acquired_date)) + geom_line(aes(color=nationality))
ggplot(female_, aes(x=class_)) + geom_bar(aes(fill = is_american)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_discrete(labels=c("Mies van der Rohe Archive" = 'Rohe Archive'))
ggplot(female_, aes(x=class_)) + geom_bar(aes(fill = is_american)) +
theme(axis.text.x = element_text(angle = 90)) +
scale_x_discrete(labels=c("Mies van der Rohe Archive" = 'Rohe Archive'))
ggplot(all_art, aes(x=class_)) + geom_bar(aes(fill=gender)) +
theme(axis.text.x = element_text(angle = 90))
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/artsy_api.csv")
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/artsy_api.csv")
head(artsy)
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp()
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
class(artsy)
class(artsy$name)
as.character(artsy$name)
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
summary(female_)
ggplot(f_international, aes(x = aqui_date)) + geom_density()
ggplot(female_, aes(x = aqui_date)) + geom_density(aes(color = is_american))
ggplot(female_, aes(x = aqui_date)) + geom_density(color = is_american)
source('~/Documents/NYCDSA/R/Shiny_project/helper_moma.R', echo=TRUE)
ggplot(female_, aes(x = aqui_date, color = is_american)) + geom_density()
ggplot(female_, aes(x = aqui_date, color = is_american)) + geom_density()
female_$is_american = ifelse(female_$nationality == "American", 1, 0)
ggplot(female_, aes(x = aqui_date, color = is_american)) + geom_density()
ggplot(female_, aes(x = aqui_date, color = as.factor(is_american))) + geom_density()
ggplot(female_, aes(x = aqui_date, color = as.factor(is_american))) +
geom_density() + ggtitle("Aquisition pieces by female artists overtime")
ggplot(female_, aes(x = aqui_date, color = as.factor(is_american))) +
geom_density() + ggtitle("Aquisition of pieces by female artists overtime")
list(artsy$name)
source('~/tidy_artsy.R', echo=TRUE)
artsy %>% filter(., name =="Imogen Cunningham")
artsy %>% filter(., name =="Imogen Cunningham") %>% select(similar_names)
artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
list(artsy$name)
names = list(artsy$name)
names = sapply(list(artsy$name), levels)
names
names_choices = (sapply((artsy$name), levels))
names_choices
names_choices = (sapply(artsy$name), levels)
names_choices = (sapply(artsy$name), levels))
names_choices = (sapply(artsy$name, levels))
names_choices
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/artsy_api.csv")
names_choices = (sapply(artsy$name, levels))
names_choices
names_choices = (sapply(list(artsy$name), levels))
names_choices
names_choices = c(sapply(list(artsy$name), levels))
names_choices
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
runApp('Documents/NYCDSA/R/Shiny_project/shiny_proj')
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
library(shiny)
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
read.csv("artsy_api.csv")
setwd("~/Documents/NYCDSA/R/Shiny_project/shiny_proj")
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
#names_choices = c(sapply(list(artsy$name), levels))
artsy_df
#names_choices = c(sapply(list(artsy$name), levels))
artsy_df<- vroom::vroom("artsy_api.csv")
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
#names_choices = c(sapply(list(artsy$name), levels))
as_tibble(artsy_df)
?as_tibble
#names_choices = c(sapply(list(artsy$name), levels))
colnames(artsy_df)
artsy_df <- fread(file = "artsy_api.csv", stringsAsFactors = FALSE)
#names_choices = c(sapply(list(artsy$name), levels))
colnames(artsy_df)
artsy_df <- read.csv("artsy_api.csv")
#names_choices = c(sapply(list(artsy$name), levels))
colnames(artsy_df)
artsy_df2 = as_tibble(artsy_df)
colnames(artsy_df2)
artsy_df2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(shiny)
library(ggplot2)
runApp()
install.packages("shinyjs")
library(shinyjs)
runApp()
runApp()
runApp()
runApp()
artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnail)
thumb = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnail)
class(thumb)
class(thumb[[1]])
thumb[[1]]
thumb[1]
as.character(thumb[[1]])
runApp()
runApp()
runApp()
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
thumbs[[1]]
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
as.character(thumbs[[1]])
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
thumbs[[1]]
thumbs
thumbs[1]
thumbs[[1]]
class(thumbs[[1]])
as.vector(thumbs[[1]])
length(as.vector(thumbs[[1]]))
?as.vector.factor
as.vector(thumbs[[1]], mode=character())
as.vector(thumbs[[1]], mode="character")
thumbs
thumbs[[1]]
unlist(thumbs[[1]])
class(unlist(thumbs[[1]]))
as.character(thumbs[[1]])
unlist(strsplit(as.character(thumbs[[1]]), split=", "))
thums_unlist = unlist(strsplit(as.character(thumbs[[1]]), split=", "))
gsub("[", "",thums_unlist )
thums_unlist
gsub("[", "",as.character(thumbs[[1]] )
gsub("[", "",as.character(thumbs[[1]] ))
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/artsy_api_2.csv")
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/shiny_proj//artsy_api_2.csv")
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/shiny_proj/artsy_api_2.csv")
artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnail)
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
thumbs[[1]]
thums_unlist = unlist(strsplit(as.character(thumbs[[1]]), split=", "))
#gsub("[", "",as.character(thumbs[[1]] ))
thums_unlist
thums_unlist = unlist(strsplit(thumbs[[1]], split=", "))
class(thumbs[[1]])
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/shiny_proj/artsy_api_2.csv", stringsAsFactors = F)
artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnail)
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
class(thumbs[[1]])
thums_unlist = unlist(strsplit(thumbs[[1]], split=", "))
#gsub("[", "",as.character(thumbs[[1]] ))
thums_unlist
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
class(thumbs[[1]])
thumbs[[1]]
thumbs[[1]]
length(thumbs[[1]])
thums_unlist = unlist(strsplit(thumbs[[1]], split=", "))
#gsub("[", "",as.character(thumbs[[1]] ))
thums_unlist
#gsub("[", "",as.character(thumbs[[1]] ))
;ength(thums_unlist)
#gsub("[", "",as.character(thumbs[[1]] ))
length(thums_unlist)
artsy = read.csv("~/Documents/NYCDSA/R/Shiny_project/shiny_proj/artsy_api_2.csv", stringsAsFactors = F)
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
class(thumbs[[1]])
length(thumbs[[1]])
thums_unlist = unlist(strsplit(thumbs[[1]], split=", "))
#gsub("[", "",as.character(thumbs[[1]] ))
length(thums_unlist)
#gsub("[", "",as.character(thumbs[[1]] ))
class(thums_unlist)
#gsub("[", "",as.character(thumbs[[1]] ))
class(thums_unlist[[1]])
thums_unlist[[1]]
?renderImage
runApp()
runApp()
runApp()
thums_unlist
runApp()
artsy_df <- read.csv("artsy_api_2.csv")
#names_choices = c(sapply(list(artsy$name), levels))
#colnames(artsy_df)
artsy_df2 = as_tibble(artsy_df)
runApp()
thums_unlist = unlist(strsplit(thumbs, split=", "))
thums_unlist
thumbs = artsy %>% filter(., name =="Imogen Cunningham") %>% select(thumbnails)
thums_unlist = unlist(strsplit(thumbs, split=", "))
thums_unlist = unlist(strsplit(as.character(thumbs), split=", "))
thums_unlist
try_to_spread = artsy %>% filter(., name == "Imogen Cunningham")
try_to_spread
as.tibble(try_to_spread)
as_tibble(try_to_spread)
runApp()
runApp()
try_to_spread
try_to_spread %>% select(., similar_names, similar_links, thumbnails)
try_to_spread = try_to_spread %>% select(.,name, similar_names, similar_links, thumbnails)
as_tibble(try_to_spread)
try_to_spread
try_to_spread = as_tibble(try_to_spread %>% select(.,name, similar_names, similar_links, thumbnails))
try_to_spread %>%
transform(similar_names = strsplit(similar_names, ",")) %>%
unnest(similar_names)
try_to_spread %>% unnest()
library(dplyr)
library(tidyr)
try_to_spread %>% unnest()
try_to_spread %>% unnest(cols = c(similar_names, similar_links,thumbnails))
try_to_spread %>%
transform(similar_names = strsplit(similar_names, ",")) %>%
unnest(similar_names)
try_to_spread %>%
transform(similar_names = strsplit(similar_names, ","),similar_links = strsplit(similar_links, ",") ) %>%
unnest(similar_names, similar_links)
try_to_spread = artsy %>% filter(., name == "Imogen Cunningham")
try_to_spread = as_tibble(try_to_spread %>% select(.,name, similar_names, similar_links, thumbnails))
try_to_spread %>%
transform(similar_names = strsplit(similar_names, ","),similar_links = strsplit(similar_links, ",") ) %>%
unnest(similar_names, similar_links)
try_to_spread %>%
transform(similar_names = strsplit(similar_names, ","),similar_links = strsplit(similar_links, ","),
thumbnails = strsplit(thumbnails, ",")) %>%
unnest(similar_names, similar_links,thumbnails)
try_to_spread =
try_to_spread %>%
transform(similar_names = strsplit(similar_names, ","),similar_links = strsplit(similar_links, ","),
thumbnails = strsplit(thumbnails, ",")) %>%
unnest(similar_names, similar_links,thumbnails)
View(try_to_spread)
get_spread_data = function(artist_name, df){
df =
df %>%
filter(., name == artist_name) %>%
select(.,name, similar_names, similar_links, thumbnails)
df = as_tibble(df) %>%
transform(similar_names = strsplit(similar_names, ","),
similar_links = strsplit(similar_links, ","),
thumbnails = strsplit(thumbnails, ",")) %>%
unnest(similar_names, similar_links,thumbnails)
df
}
get_spread_data("Imogen Cunningham", artsy)
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
source("helper.R")
runApp()
runApp()
runApp()
runApp()
as.character(input$artist_name)
runApp()
df = as_tibble(df) %>%
transform(similar_names = strsplit(as.character(similar_names), ","),
similar_links = strsplit(as.character(similar_links), ","),
thumbnails = strsplit(as.character(thumbnails), ",")) %>%
unnest(similar_names, similar_links,thumbnails)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
